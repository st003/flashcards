"""
Django settings for flashcards project.

Generated by 'django-admin startproject' using Django

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import logging

from collections import deque
from pathlib import Path

import yaml

from django.core.management.utils import get_random_secret_key

# TODO - investigate Django's logging config settings
log: logging.Logger = logging.getLogger(__name__)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# open config.yml
config: dict = {}
try:
    with open(f'{BASE_DIR}/config.yml', 'r', newline='') as config_yaml:
        config = yaml.safe_load(config_yaml)
except FileNotFoundError:
    log.warn('\'config.yaml\' not found')


# SECURITY WARNING: keep the secret key used in production secret!
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/#secret-key for more info
SECRET_KEY: str = config.get('secretKey', get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG: bool = config.get('debug', True)

ALLOWED_HOSTS: list[str] = config.get('allowedHosts', [])


# Application definition

INSTALLED_APPS = [
    'words.apps.WordsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flashcards.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flashcards.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES: dict = config.get('databases', {})

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# the location static files will be placed when running 'manage.py collectstatic'
# for deployment purposes, keep the values of STATIC_URL and STATIC_ROOT the same
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')


# Custom configurations
# in memory list of recently request words
DEFAULT_HISTORY_MEM = 15
CONFIG_HISTORY_MEM = abs(config.get('requestedWordHistoryMax', DEFAULT_HISTORY_MEM))
WORD_ID_MEM = deque(maxlen=CONFIG_HISTORY_MEM)
